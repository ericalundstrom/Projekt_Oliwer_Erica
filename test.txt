async function fetching() {
  const data = await d3.json("dataset/healthy_lifestyle_city_2021.json");
  return data;
}

async function CreateButtons() {
  let keys = [];
  let bigDataset = await fetching();

  let firstData = bigDataset[0];

  for (const key in firstData) {
    if (key === "City" || key === "flag") {
      console.log("blÃ¥");
    } else {
      keys.push(key);
    }
  }
  let ButtonWrapper = document.createElement("div");
  ButtonWrapper.classList.add("ButtonBox");
  document.querySelector("body").append(ButtonWrapper);

  keys.forEach((d) => {
    let ButtonDom = document.createElement("button");
    ButtonDom.classList.add("button");
    let text = d.replace("_", " ");
    ButtonDom.textContent = text;
    ButtonWrapper.append(ButtonDom);
    ButtonDom.addEventListener("click", (e) => {
      filterDataViz(e, d);
    });
  });
}

CreateButtons();

let wSvg = 1000;
let hSvg = 800;
let hViz = 0.9 * hSvg;
let wViz = 0.9 * wSvg;
let wPadding = (wSvg - wViz) / 2;
let hPadding = (hSvg - hViz) / 2;

let svg = d3
  .select("body")
  .append("svg")
  .attr("height", hSvg)
  .attr("width", wSvg);

function createBubbleChart(property) {
  let bigDataset;

  fetching().then((data) => {
    bigDataset = data;

    // Extract the property values for scaling the radius
    let values = bigDataset.map((d) => parseFloat(d[property]));

    // Set up a scale for the radius
    let scaleRadius = d3
      .scaleLinear()
      .domain([d3.min(values), d3.max(values)])
      .range([5, 30]); // Adjust the range based on your preference

    // Set up your SVG container
    let gViz = svg
      .append("g")
      .selectAll()
      .data(bigDataset)
      .enter()
      .append("circle")
      .attr("cx", (d, i) => i * 30 + 50) // Adjust the x-coordinate as needed
      .attr("cy", hSvg / 2)
      .attr("r", (d) => scaleRadius(parseFloat(d[property])))
      .attr("fill", "blue") // You can customize the color
      .attr("stroke", "white"); // You can customize the stroke
  });
}

function filterDataViz(e, property) {
  console.log(e.target.textContent);
  createBubbleChart(property);
}
